// Set executor for PBS Pro and configure resource allocation
process.executor = 'pbspro'
process.queueSize = 49
process.clusterOptions = { "-l select=1:ncpus=${task.cpus}:mem=${task.memory.toMega()}mb -l walltime=${task.time.toHours()}:00:00" }

// General process resource definitions
process {
    cpus   = { 1 * task.attempt }
    memory = { 6.GB * task.attempt }
    time   = { 4.h * task.attempt }
    errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
    maxRetries    = 2
    maxErrors     = '-1'

    withLabel:process_tiny {
        cpus   = { 2 * task.attempt }
        memory = { 6.GB * task.attempt }
        time   = { 1.h * task.attempt }
    }

    withLabel:process_low {
        cpus   = { 2 * task.attempt }
        memory = { 12.GB * task.attempt }
        time   = { 4.h * task.attempt }
    }

    withLabel:process_medium {
        cpus   = { 4 * task.attempt }
        memory = { 24.GB * task.attempt }
        time   = { 8.h * task.attempt }
    }

  withLabel:process_high {
    cpus = { 8 * task.attempt }
    memory = { 128.GB * task.attempt }
    time = { 24.h * task.attempt }
}

    withLabel:process_long {
        cpus   = { 4 * task.attempt }
        memory = { 48.GB * task.attempt }
        time   = { 24.h * task.attempt }
    }

    withLabel:process_high_memory {
        cpus   = { 8 * task.attempt }
        memory = { 96.GB * task.attempt }
        time   = { 24.h * task.attempt }
    }

    withLabel:error_ignore {
        errorStrategy = 'ignore'
    }
    withLabel:error_retry {
        errorStrategy = 'retry'
        maxRetries    = 2
    }
}

// Singularity settings
singularity {
    enabled = true
    cacheDir = "/rds/general/user/pr422/ephemeral/singularity_cache"
    pullTimeout = '120m'
}

apptainer {
    cacheDir = "/rds/general/user/pr422/ephemeral/singularity_cache"
}

// Nextflow working directory
workDir = '/rds/general/user/${USER}/ephemeral/NEXTFLOW/'

// Monitoring settings
timeline {
    enabled = true
    file = "/rds/general/user/pr422/projects/puklandmarkproject/ephemeral/Parisa_scdownstream/output_preprocess/run1/timeline.html"
    overwrite = true
}

report {
    enabled = true
    file = "/rds/general/user/pr422/projects/puklandmarkproject/ephemeral/Parisa_scdownstream/output_preprocess/run1/report.html"
    overwrite = true
}

trace {
    enabled = true
    file = "/rds/general/user/pr422/projects/puklandmarkproject/ephemeral/Parisa_scdownstream/output_preprocess/run1/trace.txt"
    overwrite = true
}

// Pipeline parameters 
params {
    input                 = "/rds/general/user/pr422/projects/puklandmarkproject/ephemeral/Parisa/converted_h5ad_files/32human_epilep_scdownstream.csv"
    outdir                = "/rds/general/user/pr422/projects/puklandmarkproject/ephemeral/Parisa_scdownstream/output_preprocess/run1"
    ambient_removal       = "cellbender"
    doublet_detection     = "scrublet"
    memory_scale          = 1
}